$c-setup: $c-secondary;
$c-slider: $c-setup;

// these must all be the same size as we iterate through them...
$game-family: (
  'chess',
  'draughts',
  'loa',
  'shogi',
  'xiangqi',
  'flipello',
  'amazons',
  'breakthroughtroyka',
  'oware',
  'togyzkumalak',
  'go',
  'backgammon',
  'abalone'
);

$game-family-random-pieces: (
  'wbK.svg',
  'wbK.png',
  'bwL.png',
  'bwK.png',
  'rbK.png',
  'bwP.png',
  'wbQ.svg',
  'wbP.svg',
  'mixed.svg',
  'mixed.svg',
  'bwS.svg',
  'wbS.svg',
  'bwS.svg'
);

$game-family-p1-pieces: (
  'chess/cburnett/wK.svg',
  'draughts/wide_crown/wK.svg',
  'loa/check_yb_loa/bL.png',
  'shogi/ctw/0GY.svg',
  'xiangqi/ka/RK.svg',
  'flipello/classic_flipello/bP.png',
  'amazons/arrow/wQ.svg',
  'breakthroughtroyka/staunty/wP.svg',
  'oware/south.svg',
  'togyzkumalak/south.svg',
  'go/classic_stone/bS.svg',
  'backgammon/wooden/w.svg',
  'abalone/classic/bS.svg'
);

$game-family-p2-pieces: (
  'chess/cburnett/bK.svg',
  'draughts/wide_crown/bK.svg',
  'loa/check_yb_loa/wL.png',
  'shogi/ctw/0OU.svg',
  'xiangqi/ka/BK.svg',
  'flipello/classic_flipello/wP.png',
  'amazons/arrow/bQ.svg',
  'breakthroughtroyka/staunty/bP.svg',
  'oware/north.svg',
  'togyzkumalak/north.svg',
  'go/classic_stone/wS.svg',
  'backgammon/wooden/b.svg',
  'abalone/classic/wS.svg'
);

.game-setup {
  display: block;

  #modal-wrap {
    width: 30em;
    padding: 0;
  }

  text-align: center;

  h2 {
    margin: 1.5rem 0;
  }

  form > div {
    padding: 0.5em 1em;
  }

  .mode_choice,
  .bot_choice,
  .playerIndex_choices,
  .byoyomi_periods {
    & group.radio div {
      max-width: unset;
    }
  }

  .playerIndex_choices {
    & group.radio div {
      width: unset;
    }
  }

  .bot_choice {
    & group.radio div {
      width: 25%;
    }
  }

  .byoyomi_periods {
    & group.radio div {
      width: 20%;
    }
  }

  .gameGroup_choice,
  .variant_choice {
    & group.radio {
      label {
        padding: 2px;
      }
      div {
        width: 25%;
        max-width: 25%;
        font-size: 95%;
      }
    }
  }

  @for $i from 1 through 3 {
    .variant_choice group.radio.child-count-#{$i} div {
      width: #{100% / $i};
      max-width: #{100% / $i};
    }
  }

  group.radio {
    margin: 0 auto 1em auto;
    width: 100%;
    div {
      width: 33.33%;
      max-width: 33.33%;
    }

    .disabled {
      opacity: 0.4;
      cursor: default;
    }

    input:checked + label {
      background: $c-setup;
    }

    label {
      display: flex;
      flex-flow: column;
      &::before {
        font-size: 200%;
      }
      height: 64px;
    }
  }

  .bot_choice,
  .byoyomi_periods {
    group.radio label {
      // width: 3em;
      height: 3em;
    }
  }

  .optional_config {
    border-bottom: $border;
    background: $c-bg-zebra;
    border-top: $border;
  }

  .submit {
    border-top: $border;
  }

  .label_select {
    @extend %flex-center;

    &.variant {
      margin-bottom: 0.5em;
    }

    label {
      flex: 0 0 33%;
      text-align: right;
    }

    select {
      margin-left: 0.8em;
      font-weight: bold;
    }
  }

  .mode_choice,
  .opponent_choices,
  .playerIndex,
  .gameGroup_choice,
  .variant_choice,
  .time_mode_defaults {
    &.collapsible:not(.active) {
      @extend %flex-center;
    }
  }

  .opponent_choices.collapsible {
    flex-flow: row nowrap;
    .opponent_bot.choice {
      text-wrap-mode: nowrap;
      a {
        margin-left: -2em;
      }
      a:has(i) {
        margin-left: -4em;
      }
    }
  }

  .collapsible:not(.active) {
    .section_title {
      flex: 0 0 33%;
      text-align: center;
      padding-bottom: 0;
    }
  }

  .section_title {
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    padding-bottom: 1em;
    a[data-icon] {
      padding-right: 0.3em;
    }
  }

  .choice {
    margin-left: 2em;
    &::before {
      font-size: 200%;
      margin-right: 2em;
    }

    &.playerIndex__button {
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
      margin-left: -5.2em;
      height: 45px !important;
      &.random {
        margin-left: -2.8em;
      }
      i {
        margin-right: 3.8em;
      }
    }
  }

  group.radio.hide,
  label.hide {
    display: none;
  }

  .fen_position {
    display: none;

    .board_editor {
      display: block;
      width: 50%;
      margin: 0.5em auto 0 auto;
    }

    .fen_form {
      @extend %flex-center-nowrap;
    }

    .fen_form input {
      flex: 1 1 100%;
    }
  }

  #form3-fen.failure {
    background: mix($c-bg-box, $c-bad, 80%);
    box-shadow: 0 0 13px $c-bad;
  }

  .range {
    padding-top: 1em;

    span {
      font-weight: bold;
    }

    input {
      font-size: 1.5em;
      padding: 0.5em 0.5em 0 0.5em;
      width: 100%;
    }
  }

  .rating-range {
    @extend %flex-center-nowrap;
    justify-content: center;
    .rating-min,
    .rating-max {
      flex: 0 0 7ch;
    }
    input {
      width: 30%;
      padding: 0.6em 0;
    }
  }

  .ratings {
    margin-right: 4em;
    width: 100%;
    text-align: center;
  }

  .ratings div {
    display: none;
  }

  @each $gf in $game-family {
    $iter: index($game-family, $gf);
    .playerIndex_choices.#{$gf} {
      display: flex;
      align-items: flex-end;
      justify-content: center;
      margin: 0 auto;
      text-align: center;

      $padding_button: 7px;

      .playerIndex__button {
        //width: 64px;
        height: 65px;
        padding: $padding_button;

        i {
          display: block;
          padding: 0;
          margin-bottom: 2px;
          width: calc(45px - 2 * #{$padding_button});
          height: calc(45px - 2 * #{$padding_button});
          background-size: calc(45px - 2 * #{$padding_button}) calc(45px - 2 * #{$padding_button});
        }

        $p1-piece: nth($game-family-p1-pieces, $iter);
        &.p1 i {
          background-image: url(../piece/#{$p1-piece});
        }

        $p2-piece: nth($game-family-p2-pieces, $iter);
        &.p2 i {
          background-image: url(../piece/#{$p2-piece});
        }

        &.random {
          $file: nth($game-family-random-pieces, $iter);
          & i {
            background-image: url(../piece/#{$gf}/#{$file});
          }
        }

        div {
          text-transform: capitalize;
        }

        &.nope {
          visibility: hidden;
        }

        &:disabled {
          opacity: 0.3;
        }
      }
    }
  }

  .submit {
    .submit_button {
      &.nope {
        visibility: hidden;
      }

      &:disabled {
        opacity: 0.3;
      }
    }

    .spinner {
      width: 50px;
      height: 50px;
      margin: 10px auto 20px auto;
    }
  }

  .botInfo {
    margin-top: -10px;
    margin-bottom: 10px;
  }
}
