@import 'variables';

$pocket-col1-height: auto;
$pocket-height: 7em;
$pocket-height-mobile: 5em;
$pocket-height-mobile-and-names: 7em;

$score-variants: ('flipello', 'flipello10', 'oware', 'togyzkumalak', 'go9x9', 'go13x13', 'go19x19', 'backgammon');
$score-variants-square: ('flipello', 'flipello10', 'oware', 'go9x9', 'go13x13', 'go19x19');
$score-variants-non-square: ('togyzkumalak', 'backgammon');
$go-variants: ('go9x9', 'go13x13', 'go19x19');

.variant-flipello .game-score,
.variant-flipello10 .game-score,
.variant-go9x9 .game-score,
.variant-go13x13 .game-score,
.variant-go19x19 .game-score {
  piece::after {
    @extend %active, %box-radius;

    content: attr(data-score);
    top: 0;
    right: 0;
    position: absolute;
    line-height: 0.9em;
    padding: 3px 0.3em;
    font-weight: bold;
    font-size: 1.5em;
  }
}

.variant-togyzkumalak .game-score::after {
  @extend %active, %box-radius;

  content: attr(data-score);
  top: -4.8em;
  right: -11em;
  position: relative;
  line-height: 0.9em;
  padding: 3px 0.3em;
  font-weight: bold;
  font-size: 1.5em;
}

body.oware-light-wood .variant-oware .game-score {
  background: url(../images/board/oware/oware_light_wood_house.png);
  background-size: cover;
}

body.oware-dark-wood .variant-oware .game-score {
  background: url(../images/board/oware/oware_dark_wood_house.png);
  background-size: cover;
}

body.togyzkumalak-blue .variant-togyzkumalak .game-score {
  background: url(../images/board/togyzkumalak/togyzkumalak_blue_house.png);
  background-size: cover;
}

body.togyzkumalak-wood .variant-togyzkumalak .game-score {
  background: url(../images/board/togyzkumalak/togyzkumalak_wood_house.png);
  background-size: cover;
}
@each $variant in $go-variants {
  body.go-light-wood .variant-#{$variant} .game-score.game-score-top {
    &.p1 {
      background: url(../images/board/go/svg/go_pot_black_light.svg);
      background-size: cover;
    }
    &.p2 {
      background: url(../images/board/go/svg/go_pot_white_light.svg);
      background-size: cover;
    }
  }

  body.go-light-wood .variant-#{$variant} .game-score.game-score-bottom {
    &.p1 {
      background: url(../images/board/go/svg/go_pot_black_light.svg);
      background-size: cover;
    }
    &.p2 {
      background: url(../images/board/go/svg/go_pot_white_light.svg);
      background-size: cover;
    }
  }

  body.go-dark-wood .variant-#{$variant} .game-score.game-score-top {
    &.p1 {
      background: url(../images/board/go/svg/go_pot_black_dark.svg);
      background-size: cover;
    }
    &.p2 {
      background: url(../images/board/go/svg/go_pot_white_dark.svg);
      background-size: cover;
    }
  }

  body.go-dark-wood .variant-#{$variant} .game-score.game-score-bottom {
    &.p1 {
      background: url(../images/board/go/svg/go_pot_black_dark.svg);
      background-size: cover;
    }
    &.p2 {
      background: url(../images/board/go/svg/go_pot_white_dark.svg);
      background-size: cover;
    }
  }
}

@each $variant in $score-variants-square {
  .variant-#{$variant} .game-score {
    @extend %box-radius;
    display: block;
    width: $pocket-height;
    height: $pocket-height;
    background-color: #aaa;

    piece {
      display: block;
      width: 100% !important;
      height: 100% !important;
      position: relative;
    }

    &-top {
      grid-area: pocket-top;

      &.p2 {
        margin-left: calc(100% - #{$pocket-height});
      }
    }

    &-names {
      grid-area: pocket-top;
      width: calc(100% - 2 * #{$pocket-height});
      height: $pocket-height;
      margin-left: $pocket-height;
      display: grid;
      padding: 0.5em;
      align-content: space-between;
      .p2 {
        justify-self: right;
      }
      .vs {
        justify-self: center;
      }
    }

    @include breakpoint($mq-col1-uniboard) {
      width: $pocket-height-mobile;
      height: $pocket-height-mobile;
      &-top.p2 {
        margin-left: calc(100% - #{$pocket-height-mobile});
      }
      &-names {
        width: calc(100% - 2 * #{$pocket-height-mobile});
        height: $pocket-height-mobile;
        margin-left: $pocket-height-mobile;
      }
    }
  }
}

$non-sqaure-pocket-height-mobile: 9.5vw;
$non-square-game-score-height-mobile: 13.5vw;
$non-square-pocket-margin-top-mobile: 5vw;
$non-square-game-score-height-mobile-and-names: 18.5vw;
.variant-togyzkumalak .game-score {
  @extend %box-radius;
  display: block;
  width: 17.8em;
  height: 4.5em;
  background-color: #aaa;

  piece.part1 {
    display: block;
    width: 5em !important;
    height: 10em !important;
    position: relative;
    margin-top: -2.2em !important;
    margin-left: 2em !important;
    transform: rotate(270deg);
  }

  piece.part2 {
    display: block;
    width: 5em !important;
    height: 10em !important;
    position: relative;
    margin-top: -10em !important;
    margin-left: 9.6em !important;
    transform: rotate(270deg);
  }

  &-top {
    grid-area: pocket-top;
    margin-top: 2.5em;
  }

  &-bottom {
    grid-area: pocket-bot;
  }

  &-names {
    display: none;
  }

  @include breakpoint($mq-col1-uniboard) {
    width: calc(#{$non-sqaure-pocket-height-mobile} * 4);
    height: $non-sqaure-pocket-height-mobile;
    piece.part1 {
      width: calc(#{$non-sqaure-pocket-height-mobile} * 1.11) !important;
      height: calc(#{$non-sqaure-pocket-height-mobile} * 2.22) !important;
      margin-top: -4.8vw !important;
      margin-left: calc(#{$non-sqaure-pocket-height-mobile} * 1.11 * 0.5) !important;
    }
    piece.part2 {
      width: calc(#{$non-sqaure-pocket-height-mobile} * 1.11) !important;
      height: calc(#{$non-sqaure-pocket-height-mobile} * 2.22) !important;
      margin-top: calc(#{$non-sqaure-pocket-height-mobile} * -2.22) !important;
      margin-left: calc(#{$non-sqaure-pocket-height-mobile} * 2.25) !important;
    }
    &-top {
      grid-area: pocket-top;
      margin-top: $non-square-pocket-margin-top-mobile;
      &::after {
        top: -13.3vw;
        right: -38.5vw;
      }
    }
    &-bottom {
      grid-area: pocket-top;
      margin-left: calc(100% - 4 * #{$non-sqaure-pocket-height-mobile});
      margin-top: $non-square-pocket-margin-top-mobile;
      &::after {
        top: -13.3vw;
        right: 8vw;
      }
    }
    &-names {
      grid-area: pocket-top;
      width: 100%;
      display: inline-flex;
      padding: 0.5em;
      justify-content: space-around;
    }
  }
}

.variant-nackgammon .game-score,
.variant-backgammon .game-score {
  @extend %box-radius;
  display: flex;
  width: 18em;
  height: 6em;
  gap: 0.13em;
  background-color: #aaa;

  piece {
    width: 1em !important;
    height: 4.7em !important;
    position: relative;
    margin-top: 0.65em !important;
    &.first {
      margin-left: 0.65em;
    }
  }

  &-top {
    grid-area: pocket-top;
    margin-top: 2.5em;
  }

  &-bottom {
    grid-area: pocket-bot;
  }

  &-names {
    display: none;
  }

  @include breakpoint($mq-col1) {
    width: calc(#{$non-sqaure-pocket-height-mobile} * 4);
    height: calc(#{$non-sqaure-pocket-height-mobile} * 4 / 3);
    piece {
      width: calc(#{$non-sqaure-pocket-height-mobile} * (4 / 3) * (1 / 6)) !important;
      height: calc(#{$non-sqaure-pocket-height-mobile} * (4 / 3) * (4.7 / 6)) !important;
      position: relative;
      margin-top: 1.4vw !important;
      &.first {
        margin-left: 1.4vw;
      }
    }
    &-top {
      grid-area: pocket-top;
      margin-top: $non-square-pocket-margin-top-mobile;
    }
    &-bottom {
      grid-area: pocket-top;
      margin-left: calc(100% - 4 * #{$non-sqaure-pocket-height-mobile});
      margin-top: $non-square-pocket-margin-top-mobile;
    }
    &-names {
      grid-area: pocket-top;
      width: 100%;
      display: inline-flex;
      padding: 0.5vw;
      justify-content: space-around;
    }
  }

  @include breakpoint($mq-col2-uniboard) {
    &-top {
      margin-bottom: $block-gap;
    }

    &-bottom {
      margin-top: $block-gap;
    }
  }
}

@each $variant in $score-variants-square {
  .analyse.has-players.variant-#{$variant} {
    grid-template-rows: $pocket-height-mobile-and-names auto auto 50vh;
    grid-template-areas: 'pocket-top' 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';

    @include breakpoint($mq-col2) {
      grid-template-rows: $pocket-height auto $pocket-height;
      grid-template-areas: 'board gauge pocket-top' 'board gauge tools' 'board gauge controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    }

    @include breakpoint($mq-col3) {
      grid-template-rows: $pocket-height $meta-height $chat-height $pocket-height;
      grid-template-areas: 'side    . board gauge pocket-top' 'side    . board gauge tools' 'chat    . board gauge tools' 'chat    . board gauge controls' 'uchat   . under .     acpl';
    }
  }

  .analyse.variant-#{$variant} {
    grid-template-rows: $pocket-height-mobile auto auto 50vh;
    grid-template-areas: 'pocket-top' 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';

    @include breakpoint($mq-col2) {
      grid-template-rows: $pocket-height auto $pocket-height;
      grid-template-areas: 'board gauge pocket-top' 'board gauge tools' 'board gauge controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    }

    @include breakpoint($mq-col3) {
      grid-template-rows: $pocket-height $meta-height $chat-height $pocket-height;
      grid-template-areas: 'side    . board gauge pocket-top' 'side    . board gauge tools' 'chat    . board gauge tools' 'chat    . board gauge controls' 'uchat   . under .     acpl';
    }
  }
}

@each $variant in $score-variants-non-square {
  .analyse.has-players.variant-#{$variant} {
    grid-template-rows: $non-square-game-score-height-mobile-and-names auto auto 50vh;
    grid-template-areas: 'pocket-top' 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';

    @include breakpoint($mq-col2) {
      grid-template-rows: $pocket-height auto $pocket-height;
      grid-template-areas: 'board      gauge pocket-top' 'board      gauge tools' 'board      gauge pocket-bot' 'under      .     controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    }

    @include breakpoint($mq-col3) {
      grid-template-rows: $pocket-height $meta-height $chat-height $pocket-height;
      grid-template-areas: 'side    . board gauge pocket-top' 'side    . board gauge tools' 'chat    . board gauge tools' 'chat    . board gauge pocket-bot' 'uchat   . under .     controls' 'uchat   . under .     acpl';
    }
  }

  .analyse.variant-#{$variant} {
    grid-template-rows: $non-square-game-score-height-mobile auto auto 50vh;
    grid-template-areas: 'pocket-top' 'board' 'controls' 'tools' 'side' 'acpl' 'under' 'chat' 'uchat';

    @include breakpoint($mq-col2) {
      grid-template-rows: $pocket-height auto $pocket-height;
      grid-template-areas: 'board      gauge pocket-top' 'board      gauge tools' 'board      gauge pocket-bot' 'under      .     controls' 'under      .     acpl' 'under      .     side' 'chat       .     side' 'uchat      .     side';
    }

    @include breakpoint($mq-col3) {
      grid-template-rows: $pocket-height $meta-height $chat-height $pocket-height;
      grid-template-areas: 'side    . board gauge pocket-top' 'side    . board gauge tools' 'chat    . board gauge tools' 'chat    . board gauge pocket-bot' 'uchat   . under .     controls' 'uchat   . under .     acpl';
    }
  }
}
