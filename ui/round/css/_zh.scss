.pocket {
  &-top {
    grid-area: mat-top;
    margin-bottom: -0.5em;
  }

  &-bottom {
    grid-area: mat-bot;
    margin-top: -0.5em;
  }

  @include breakpoint($mq-col1) {
    &-top {
      grid-area: pocket-top;
    }

    &-bottom {
      grid-area: pocket-bot;
    }
  }

  @include breakpoint($mq-col2-uniboard) {
    &-top {
      margin-bottom: $block-gap;
    }

    &-bottom {
      margin-top: $block-gap;
    }
  }
}

@include breakpoint($mq-col2) {
  @include breakpoint($mq-short) {
    #{$moves-tag} {
      display: none;
    }
  }

  @include breakpoint($mq-tall) {
    #{$moves-tag} {
      display: flex;
    }
  }
}

.ricons {
  @include breakpoint($mq-col1) {
    justify-content: flex-end;
  }
}

.rcontrols {
  .follow-up {
    & .button {
      padding: 9px 0;
    }
  }

  .rematch {
    &.button {
      height: 50px;
    }

    &-decline {
      height: 49px;
    }
  }
}

// These images are also referenced in crazyCtrl.ts (for preloading).
// The other file should be kept in sync.
// chess
@each $color, $c in ('p1': w, 'p2': b) {
  @each $role, $r in (p-piece: P, n-piece: N, b-piece: B, r-piece: R, q-piece: Q) {
    body.cursor-#{$color}-#{$role}-chess * {
      cursor:
        url(../piece/chess/cburnett/#{$c}#{$r}.svg) 22 22,
        auto !important;
    }
  }
}

$shogi-piece-drops-roles: (
  'p-piece': 'FU',
  'l-piece': 'KY',
  'n-piece': 'KE',
  's-piece': 'GI',
  'g-piece': 'KI',
  'b-piece': 'KA',
  'r-piece': 'HI',
);
// These images are also referenced in crazyCtrl.ts (for preloading).
// The other file should be kept in sync.
// shogi - all drops are ally pieces, i.e. white or '0'
@each $role, $r in $shogi-piece-drops-roles {
  body.cursor-#{$role}-shogi * {
    cursor:
      url(../piece/shogi/2kanji/0#{$r}.svg) 22 22,
      auto !important;
  }
}
